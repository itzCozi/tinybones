---
export interface Props {
  currentPage: number;
  totalPages: number;
  baseUrl: string;
}

const { currentPage, totalPages, baseUrl } = Astro.props;

function getPageUrl(page: number): string {
  if (page === 1) {
    return baseUrl;
  }
  return `${baseUrl}/page/${page}`;
}
---

{totalPages > 1 && (
  <nav class="flex items-center justify-center gap-4 mt-8" aria-label="Pagination">
    {currentPage > 1 ? (
      <a 
        href={getPageUrl(currentPage - 1)}
        class="flex items-center px-3 text-sm font-medium pager-link-1"
        aria-label="Previous page"
      >
        Previous
      </a>
    ) : (
      <span class="flex items-center px-3 text-sm font-medium pager-link-2 cursor-not-allowed">
        Previous
      </span>
    )}

    <div class="flex">
      {Array.from({ length: totalPages }, (_, i) => i + 1).map((page) => (
        page === currentPage ? (
          <span 
            class="px-2 text-sm font-medium pager-link-2 cursor-not-allowed"
            aria-current="page"
          >
            {page}
          </span>
        ) : (
          <a 
            href={getPageUrl(page)}
            class="px-2 text-sm font-medium pager-link-1"
          >
            {page}
          </a>
        )
      ))}
    </div>

    {currentPage < totalPages ? (
      <a 
        href={getPageUrl(currentPage + 1)}
        class="flex items-center px-3 text-sm font-medium pager-link-1"
        aria-label="Next page"
      >
        Next
      </a>
    ) : (
      <span class="flex items-center px-3 text-sm font-medium pager-link-2 cursor-not-allowed">
        Next
      </span>
    )}
  </nav>
)}

