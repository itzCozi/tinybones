---
import { type CollectionEntry, getCollection, render } from "astro:content";
import { Image } from "astro:assets";

import BaseLayout from "@/layouts/BaseLayout.astro";

import SeoPost from "@/components/SeoPost.astro";
import TableOfContents from "@/components/TableOfContents.astro";

import { formatDate, calculateReadingTime } from "@/lib/util";

interface Props {
  entry: CollectionEntry<"blog">;
}

export async function getStaticPaths() {
  const blog = await getCollection("blog");
  return blog.map((entry) => ({
    params: { id: entry.id },
    props: { entry },
  }));
}

const { entry } = Astro.props;
const { Content } = await render(entry);
const readingTime = calculateReadingTime(entry.body || '');
---

<BaseLayout>
  <SeoPost slot="head" entry={entry} />
  <div class="blog-post-container">
    <div class="blog-header mb-8">
      {
        entry.data.image && (
          <Image
            src={entry.data.image}
            alt={entry.data.imageAlt || ""}
            class="mb-12 h-auto w-full"
            draggable="false"
          />
        )
      }
      <h1
        class="text-[36px] leading-snug font-bold text-balance text-black dark:text-white"
      >
        {entry.data.title}
      </h1>
      <p class="text-muted-text dark:text-dark-muted-text mt-3 flex justify-between items-center">
        <span>{formatDate(entry.data.publicationDate)}</span>
        <span>{readingTime}</span>
      </p>
      <hr
        class="border-muted-text dark:border-dark-muted-text mb-12 mt-4 border-[0.5px] opacity-10 dark:opacity-15"
      />
    </div>

    <div class="blog-content-wrapper lg:grid lg:grid-cols-4 lg:gap-10">
      <aside class="hidden lg:block lg:col-span-1">
        <TableOfContents content={entry.body || ''} />
      </aside>

      <article class="lg:col-span-3">
        <div class="lg:hidden mb-8">
          <TableOfContents content={entry.body || ''} />
        </div>
        
        <div class="prose mx-auto lg:mx-0 max-w-none">
          <Content />
        </div>
      </article>
    </div>

    <hr
      class="border-muted-text dark:border-dark-muted-text my-32 border-[0.5px] opacity-10 dark:opacity-15"
    />
  </div>
</BaseLayout>
